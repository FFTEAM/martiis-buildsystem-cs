From 4f64e7eec845fba523103533303138fe5c3ada75 Mon Sep 17 00:00:00 2001
From: Stefan Seyfried <seife@tuxbox-git.slipkontur.de>
Date: Sat, 18 Feb 2012 21:55:34 +0100
Subject: [PATCH 1/6] player2_191: silence kmsg spam

---
 .../drivers/media/dvb/stm/backend/player_module.c  |    1 +
 .../media/dvb/stm/dvb/e2_proc/e2_proc_audio.c      |   22 ++-
 .../media/dvb/stm/dvb/e2_proc/e2_proc_avs.c        |   70 +++++----
 .../media/dvb/stm/dvb/e2_proc/e2_proc_video.c      |  158 +++++++++++++-------
 .../media/dvb/stm/dvb/e2_proc/e2_proc_vmpeg.c      |  108 ++++++++-----
 .../linux/drivers/media/dvb/stm/dvb/st-pti.c       |   32 +++--
 player2_191/linux/drivers/sound/kreplay/kreplay.c  |    3 +-
 .../linux/drivers/sound/ksound/ksound-core.c       |    6 +-
 player2_191/linux/drivers/sound/ksound/ktone.c     |    3 +-
 9 files changed, 253 insertions(+), 150 deletions(-)

diff --git a/player2_191/linux/drivers/media/dvb/stm/backend/player_module.c b/player2_191/linux/drivers/media/dvb/stm/backend/player_module.c
index 09513a8..a7cf6bf 100644
--- a/player2_191/linux/drivers/media/dvb/stm/backend/player_module.c
+++ b/player2_191/linux/drivers/media/dvb/stm/backend/player_module.c
@@ -153,6 +153,7 @@ static int __init PlayerLoadModule (void)
 {
 
     report_init ();
+    report_restricted_severity_levels(severity_fatal, severity_interrupt * 10);
 
     DisplayInit ();
     BackendInit ();
diff --git a/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_audio.c b/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_audio.c
index 031c072..af23ca7 100644
--- a/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_audio.c
+++ b/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_audio.c
@@ -56,7 +56,9 @@ int proc_audio_delay_bitstream_write(struct file *file, const char __user *buf,
     char    *myString;
     ssize_t  ret = -ENOMEM;
 
+#ifdef VERY_VERBOSE
     printk("%s %ld - ", __FUNCTION__, count);
+#endif
 
     page = (char *)__get_free_page(GFP_KERNEL);
     if (page)
@@ -80,7 +82,9 @@ int proc_audio_delay_bitstream_write(struct file *file, const char __user *buf,
         strncpy(myString, page, count);
         myString[count] = '\0';
 
+#ifdef VERY_VERBOSE
         printk("%s\n", myString);
+#endif
         sscanf(myString, "%x", &delay);
 
         if (delay != 0)
@@ -218,7 +222,9 @@ int proc_audio_j1_mute_write(struct file *file, const char __user *buf,
 	ssize_t 	ret = -ENOMEM;
 	unsigned int 	State;
 
+#ifdef VERY_VERBOSE
 	printk("%s %d - ", __FUNCTION__, (int) count);
+#endif
 	mutex_lock (&(ProcDeviceContext->DvbContext->Lock));
 
 	page = (char *)__get_free_page(GFP_KERNEL);
@@ -232,7 +238,9 @@ int proc_audio_j1_mute_write(struct file *file, const char __user *buf,
 		strncpy(myString, page, count);
 		myString[count] = '\0';
 
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
+#endif
 		sscanf(myString, "%d", &State);
 
 		if (State == 1) { //MUTE
@@ -376,9 +384,9 @@ int proc_audio_ac3_write(struct file *file, const char __user *buf,
 	char 		*page;
 	char		*myString;
 	ssize_t 	ret = -ENOMEM;
-
+#ifdef VERY_VERBOSE
 	printk("%s %d - ", __FUNCTION__, (int) count);
-
+#endif
 	page = (char *)__get_free_page(GFP_KERNEL);
 	if (page)
 	{
@@ -389,9 +397,9 @@ int proc_audio_ac3_write(struct file *file, const char __user *buf,
 		myString = (char *) kmalloc(count + 1, GFP_KERNEL);
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		if (strncmp("passthrough", page, count - 1) == 0)
 		{
 			if(passthrough == 0)
@@ -465,8 +473,9 @@ int proc_audio_ac3_read (char *page, char **start, off_t off, int count,
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s %d\n", __FUNCTION__, count);
-
+#endif
 	if (passthrough == 1)
 	{
 		len = sprintf(page, "passthrough\n");
@@ -481,8 +490,9 @@ int proc_audio_ac3_choices_read (char *page, char **start, off_t off, int count,
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s %d\n", __FUNCTION__, count);
-
+#endif
 	len = sprintf(page, "downmix passthrough\n");
 
         return len;
diff --git a/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_avs.c b/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_avs.c
index 423fe94..acbde20 100644
--- a/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_avs.c
+++ b/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_avs.c
@@ -115,9 +115,9 @@ int proc_avs_0_volume_write(struct file *file, const char __user *buf,
 	char 		*page;
 	char		*myString;
 	ssize_t 	ret = -ENOMEM;
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
 	page = (char *)__get_free_page(GFP_KERNEL);
 	if (page)
 	{
@@ -139,9 +139,9 @@ int proc_avs_0_volume_write(struct file *file, const char __user *buf,
 		myString = (char *) kmalloc(count + 1, GFP_KERNEL);
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		sscanf(myString, "%d", &volume);
 
 #if defined(CUBEREVO) || defined(CUBEREVO_MINI) || defined(CUBEREVO_MINI2) || defined(CUBEREVO_MINI_FTA) || defined(CUBEREVO_250HD) || defined(CUBEREVO_2000HD) || defined(CUBEREVO_9500HD) || defined(TF7700) || defined(UFS912) || defined(UFS922) || defined(HL101) || defined(VIP1_V2) || defined(VIP2_V1) || defined(HOMECAST5101) || defined(ATEVIO7500) || defined(HS7810A) || defined(HS7110) || defined(WHITEBOX) || defined(IPBOX9900) || defined(IPBOX99) || defined(IPBOX55) || defined(ADB_BOX)
@@ -226,8 +226,9 @@ int proc_avs_0_volume_read (char *page, char **start, off_t off, int count,
 			  int *eof, void *data_unused)
 {
 		int len = 0;
+#ifdef VERY_VERBOSE
 		printk("%s\n", __FUNCTION__);
-
+#endif
 	   len = sprintf(page, "%d\n", current_e2_volume);
 
       return len;
@@ -237,8 +238,9 @@ int proc_avs_0_input_choices_read (char *page, char **start, off_t off, int coun
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	len = sprintf(page, "encoder scart\n");
         return len;
 }
@@ -250,9 +252,9 @@ int proc_avs_0_input_write(struct file *file, const char __user *buf,
 	char		*myString;
 	ssize_t 	ret = -ENOMEM;
 	/* int		result; */
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
 	page = (char *)__get_free_page(GFP_KERNEL);
 	if (page)
 	{
@@ -263,9 +265,9 @@ int proc_avs_0_input_write(struct file *file, const char __user *buf,
 		myString = (char *) kmalloc(count + 1, GFP_KERNEL);
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 	    	if(!strncmp("encoder", myString, count - 1))
 	    	{
 			avs_command_kernel(SAAIOSSRCSEL, SAA_SRC_ENC);
@@ -303,8 +305,9 @@ int proc_avs_0_input_read (char *page, char **start, off_t off, int count,
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	if(current_input == ENCODER)
     		len = sprintf(page, "encoder\n");
   	else
@@ -320,9 +323,9 @@ int proc_avs_0_fb_write(struct file *file, const char __user *buf,
 	char		*myString;
 	ssize_t 	ret = -ENOMEM;
 	/* int		result; */
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
 	page = (char *)__get_free_page(GFP_KERNEL);
 	if (page)
 	{
@@ -333,8 +336,9 @@ int proc_avs_0_fb_write(struct file *file, const char __user *buf,
 		myString = (char *) kmalloc(count + 1, GFP_KERNEL);
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
+#endif
 		kfree(myString);
 		//result = sscanf(page, "%3s %3s %3s %3s %3s", s1, s2, s3, s4, s5);
 	}
@@ -351,8 +355,9 @@ int proc_avs_0_fb_read (char *page, char **start, off_t off, int count,
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	len = sprintf(page, "low\n");
 
         return len;
@@ -364,9 +369,9 @@ int proc_avs_0_colorformat_write(struct file *file, const char __user *buf,
 	char 		*page;
 	char		*myString;
 	ssize_t 	ret = -ENOMEM;
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
 	page = (char *)__get_free_page(GFP_KERNEL);
 	if (page)
 	{
@@ -386,9 +391,9 @@ int proc_avs_0_colorformat_write(struct file *file, const char __user *buf,
 		myString = (char *) kmalloc(count + 1, GFP_KERNEL);
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		sscanf(myString, "%d", &alpha);
 
 //0rgb 1yuv 2422
@@ -517,8 +522,9 @@ int proc_avs_0_colorformat_read (char *page, char **start, off_t off, int count,
 
 	struct stmfbio_output_configuration outputConfig;
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s %d\n", __FUNCTION__, count);
-
+#endif
 	outputConfig.outputid = 1;
 
 	stmfb_get_output_configuration(&outputConfig,info);
@@ -548,8 +554,9 @@ int proc_avs_0_colorformat_choices_read (char *page, char **start, off_t off, in
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	len = sprintf(page, "rgb cvbs svideo yuv hdmi_rgb hdmi_yuv hdmi_422\n");
 
         return len;
@@ -562,9 +569,9 @@ int proc_avs_0_sb_write(struct file *file, const char __user *buf,
 	char		*myString;
 	ssize_t 	ret = -ENOMEM;
 	/* int		result; */
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
 	page = (char *)__get_free_page(GFP_KERNEL);
 	if (page)
 	{
@@ -575,8 +582,9 @@ int proc_avs_0_sb_write(struct file *file, const char __user *buf,
 		myString = (char *) kmalloc(count + 1, GFP_KERNEL);
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
+#endif
 		kfree(myString);
 		//result = sscanf(page, "%3s %3s %3s %3s %3s", s1, s2, s3, s4, s5);
 	}
@@ -593,8 +601,9 @@ int proc_avs_0_sb_read (char *page, char **start, off_t off, int count,
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	len = sprintf(page, "auto\n");
 
         return len;
@@ -607,9 +616,9 @@ int proc_avs_0_standby_write(struct file *file, const char __user *buf,
 	char		*myString;
 	ssize_t 	ret = -ENOMEM;
 	/* int		result; */
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
 	page = (char *)__get_free_page(GFP_KERNEL);
 	if (page)
 	{
@@ -620,9 +629,9 @@ int proc_avs_0_standby_write(struct file *file, const char __user *buf,
 		myString = (char *) kmalloc(count + 1, GFP_KERNEL);
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		if (strncmp("on", page, count - 1) == 0)
 		{
                         current_standby = 1;
@@ -649,8 +658,9 @@ int proc_avs_0_standby_read (char *page, char **start, off_t off, int count,
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	if(current_standby == 0)
 		len = sprintf(page, "off\n");
 	if(current_standby == 1)
diff --git a/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_video.c b/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_video.c
index 71c406a..e1e041a 100644
--- a/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_video.c
+++ b/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_video.c
@@ -298,7 +298,7 @@ int proc_video_aspect_write(struct file *file, const char __user *buf,
 	char		*myString;
 	ssize_t 	ret = -ENOMEM;
 	/* int		result; */
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
@@ -306,6 +306,7 @@ int proc_video_aspect_write(struct file *file, const char __user *buf,
 #else
 	printk("%p, %p, %d, %p", ProcDeviceContext, ProcDeviceContext->DvbContext, ProcDeviceContext->DvbContext->Lock.count.counter, ProcDeviceContext->VideoStream);
 #endif
+#endif
 
     	mutex_lock (&(ProcDeviceContext->DvbContext->Lock));
 
@@ -323,9 +324,9 @@ int proc_video_aspect_write(struct file *file, const char __user *buf,
 
 
 		aspect_e2 = VIDEO_FORMAT_16_9;
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		if (strncmp("4:3", myString, count - 1) == 0)
 		{
 			aspect_e2 = VIDEO_FORMAT_4_3;
@@ -365,8 +366,9 @@ int proc_video_aspect_read (char *page, char **start, off_t off, int count,
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	if (aspect_e2 == VIDEO_FORMAT_4_3) {
 		len = sprintf(page, "4:3\n");
 	} else if (aspect_e2 == VIDEO_FORMAT_16_9) {
@@ -384,8 +386,9 @@ int proc_video_aspect_choices_read (char *page, char **start, off_t off, int cou
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	//we dont support any, whatever this is
 	//len = sprintf(page, "4:3 16:9 any\n");
 	len = sprintf(page, "4:3 16:9\n");
@@ -401,9 +404,9 @@ int proc_video_policy_write(struct file *file, const char __user *buf,
 	char		*myString;
 	ssize_t 	ret = -ENOMEM;
 	int		result;
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
     	mutex_lock (&(ProcDeviceContext->DvbContext->Lock));
 
 	page = (char *)__get_free_page(GFP_KERNEL);
@@ -415,8 +418,9 @@ int proc_video_policy_write(struct file *file, const char __user *buf,
 		myString = (char *) kmalloc(count + 1, GFP_KERNEL);
 		strncpy(myString, page, count);
 		myString[count] = '\0';
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		if (strncmp("letterbox", myString, count - 1) == 0) {
 			policy_e2 = VIDEO_POL_LETTER_BOX;
 		} else if (strncmp("panscan", myString, count - 1) == 0) {
@@ -467,8 +471,9 @@ int proc_video_policy_read (char *page, char **start, off_t off, int count,
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	if (policy_e2 == VIDEO_POL_LETTER_BOX) {
 		len = sprintf(page, "letterbox\n");
 	} else if (policy_e2 == VIDEO_POL_PAN_SCAN) {
@@ -486,8 +491,9 @@ int proc_video_policy_choices_read (char *page, char **start, off_t off, int cou
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	len = sprintf(page, "letterbox panscan non bestfit\n");
 
         return len;
@@ -504,9 +510,9 @@ int proc_video_videomode_write(struct file *file, const char __user *buf,
         int             new_count;
 
 	char* myString = kmalloc(count + 1, GFP_KERNEL);
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
 	mutex_lock (&(ProcDeviceContext->DvbContext->Lock));
 
 	void* fb = stmfb_get_fbinfo_ptr();
@@ -530,9 +536,9 @@ int proc_video_videomode_write(struct file *file, const char __user *buf,
 
 		strncpy(myString, page, new_count);
 		myString[new_count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		//whithout -1 write a unsupportet string hangs the driver
 		for (vLoop = 0; vLoop < (sizeof(Options) / sizeof(struct Modes)) - 1; vLoop++)
 		{
@@ -585,7 +591,9 @@ int proc_video_videomode_write(struct file *file, const char __user *buf,
 			       		if (isDisplayCreated(BACKEND_VIDEO_ID, ProcDeviceContext->Id))
 					{
 						createNew = 1;
+#ifdef VERY_VERBOSE
 						printk("delete display\n");
+#endif
 						DvbDisplayDelete (BACKEND_VIDEO_ID, ProcDeviceContext->Id);
 					}
 				}
@@ -615,7 +623,9 @@ int proc_video_videomode_write(struct file *file, const char __user *buf,
 
 				if ((ProcDeviceContext != NULL) && (createNew == 1))
 				{
+#ifdef VERY_VERBOSE
 					printk("create new display\n");
+#endif
 					DisplayCreate (BACKEND_VIDEO_ID, ProcDeviceContext->Id);
 
 					VideoIoctlPlay(ProcDeviceContext);
@@ -627,8 +637,11 @@ int proc_video_videomode_write(struct file *file, const char __user *buf,
 				    	{
 				    		printk("failed to set output window %d, %d, %d\n",  Options[modeToSet].xres,  Options[modeToSet].yres, err);
 				    	} else
+#ifdef VERY_VERBOSE
 				    		printk("set output window to %d, %d ok\n",  Options[modeToSet].xres,  Options[modeToSet].yres);
-
+#else
+						;
+#endif
 				}
 			} else
 			{
@@ -655,9 +668,9 @@ int proc_video_videomode_read (char *page, char **start, off_t off, int count,
 	int                      vLoop = 0;
 	void                     *fb = NULL;
 	struct fb_info           *info;
-
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
    fb = stmfb_get_fbinfo_ptr(); /* cannot return a NULL pointer */
 
 	/* Dagobert:
@@ -717,9 +730,9 @@ int proc_video_pal_h_start_write(struct file *file, const char __user *buf,
 	int		value;
 
 	char* myString = kmalloc(count + 1, GFP_KERNEL);
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
     	mutex_lock (&(ProcDeviceContext->DvbContext->Lock));
 
 	page = (char *)__get_free_page(GFP_KERNEL);
@@ -736,9 +749,9 @@ int proc_video_pal_h_start_write(struct file *file, const char __user *buf,
 
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		sscanf(myString, "%x", &value);
 
 		fb =  stmfb_get_fbinfo_ptr();
@@ -761,7 +774,9 @@ int proc_video_pal_h_start_write(struct file *file, const char __user *buf,
 		       		if (isDisplayCreated(BACKEND_VIDEO_ID, ProcDeviceContext->Id))
 				{
 					createNew = 1;
+#ifdef VERY_VERBOSE
 					printk("delete display\n");
+#endif
 					DvbDisplayDelete (BACKEND_VIDEO_ID, ProcDeviceContext->Id);
 				}
 			}
@@ -777,7 +792,9 @@ int proc_video_pal_h_start_write(struct file *file, const char __user *buf,
 
 			if ((ProcDeviceContext != NULL) && (createNew == 1))
 			{
+#ifdef VERY_VERBOSE
 				printk("create new display\n");
+#endif
 				DisplayCreate (BACKEND_VIDEO_ID, ProcDeviceContext->Id);
 
 				VideoIoctlPlay(ProcDeviceContext);
@@ -789,8 +806,11 @@ int proc_video_pal_h_start_write(struct file *file, const char __user *buf,
 			    	{
 			    		printk("failed to set output window %d, %d, %d\n",  screen_info.xres,  screen_info.yres, err);
 			    	} else
+#ifdef VERY_VERBOSE
 			    		printk("set output window to %d, %d ok\n",  screen_info.xres,  screen_info.yres);
-
+#else
+					;
+#endif
 			}
 		} else
 		{
@@ -817,9 +837,9 @@ int proc_video_pal_h_end_write(struct file *file, const char __user *buf,
 	int		value;
 
 	char* myString = kmalloc(count + 1, GFP_KERNEL);
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
     	mutex_lock (&(ProcDeviceContext->DvbContext->Lock));
 
 	page = (char *)__get_free_page(GFP_KERNEL);
@@ -836,9 +856,9 @@ int proc_video_pal_h_end_write(struct file *file, const char __user *buf,
 
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		sscanf(myString, "%x", &value);
 
 		fb =  stmfb_get_fbinfo_ptr();
@@ -861,7 +881,9 @@ int proc_video_pal_h_end_write(struct file *file, const char __user *buf,
 		       		if (isDisplayCreated(BACKEND_VIDEO_ID, ProcDeviceContext->Id))
 				{
 					createNew = 1;
+#ifdef VERY_VERBOSE
 					printk("delete display\n");
+#endif
 					DvbDisplayDelete (BACKEND_VIDEO_ID, ProcDeviceContext->Id);
 				}
 			}
@@ -877,7 +899,9 @@ int proc_video_pal_h_end_write(struct file *file, const char __user *buf,
 
 			if ((ProcDeviceContext != NULL) && (createNew == 1))
 			{
+#ifdef VERY_VERBOSE
 				printk("create new display\n");
+#endif
 				DisplayCreate (BACKEND_VIDEO_ID, ProcDeviceContext->Id);
 
 				VideoIoctlPlay(ProcDeviceContext);
@@ -889,8 +913,11 @@ int proc_video_pal_h_end_write(struct file *file, const char __user *buf,
 			    	{
 			    		printk("failed to set output window %d, %d, %d\n",  screen_info.xres,  screen_info.yres, err);
 			    	} else
+#ifdef VERY_VERBOSE
 			    		printk("set output window to %d, %d ok\n",  screen_info.xres,  screen_info.yres);
-
+#else
+					;
+#endif
 			}
 		} else
 		{
@@ -917,9 +944,9 @@ int proc_video_pal_v_start_write(struct file *file, const char __user *buf,
 	int		value;
 
 	char* myString = kmalloc(count + 1, GFP_KERNEL);
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
     	mutex_lock (&(ProcDeviceContext->DvbContext->Lock));
 
 	page = (char *)__get_free_page(GFP_KERNEL);
@@ -936,9 +963,9 @@ int proc_video_pal_v_start_write(struct file *file, const char __user *buf,
 
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		sscanf(myString, "%x", &value);
 
 		fb =  stmfb_get_fbinfo_ptr();
@@ -961,7 +988,9 @@ int proc_video_pal_v_start_write(struct file *file, const char __user *buf,
 		       		if (isDisplayCreated(BACKEND_VIDEO_ID, ProcDeviceContext->Id))
 				{
 					createNew = 1;
+#ifdef VERY_VERBOSE
 					printk("delete display\n");
+#endif
 					DvbDisplayDelete (BACKEND_VIDEO_ID, ProcDeviceContext->Id);
 				}
 			}
@@ -977,7 +1006,9 @@ int proc_video_pal_v_start_write(struct file *file, const char __user *buf,
 
 			if ((ProcDeviceContext != NULL) && (createNew == 1))
 			{
+#ifdef VERY_VERBOSE
 				printk("create new display\n");
+#endif
 				DisplayCreate (BACKEND_VIDEO_ID, ProcDeviceContext->Id);
 
 				VideoIoctlPlay(ProcDeviceContext);
@@ -989,8 +1020,11 @@ int proc_video_pal_v_start_write(struct file *file, const char __user *buf,
 			    	{
 			    		printk("failed to set output window %d, %d, %d\n",  screen_info.xres,  screen_info.yres, err);
 			    	} else
+#ifdef VERY_VERBOSE
 			    		printk("set output window to %d, %d ok\n",  screen_info.xres,  screen_info.yres);
-
+#else
+					;
+#endif
 			}
 		} else
 		{
@@ -1017,9 +1051,9 @@ int proc_video_pal_v_end_write(struct file *file, const char __user *buf,
 	int		value;
 
 	char* myString = kmalloc(count + 1, GFP_KERNEL);
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
     	mutex_lock (&(ProcDeviceContext->DvbContext->Lock));
 
 	page = (char *)__get_free_page(GFP_KERNEL);
@@ -1036,9 +1070,9 @@ int proc_video_pal_v_end_write(struct file *file, const char __user *buf,
 
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		sscanf(myString, "%x", &value);
 
 		fb =  stmfb_get_fbinfo_ptr();
@@ -1061,7 +1095,9 @@ int proc_video_pal_v_end_write(struct file *file, const char __user *buf,
 		       		if (isDisplayCreated(BACKEND_VIDEO_ID, ProcDeviceContext->Id))
 				{
 					createNew = 1;
+#ifdef VERY_VERBOSE
 					printk("delete display\n");
+#endif
 					DvbDisplayDelete (BACKEND_VIDEO_ID, ProcDeviceContext->Id);
 				}
 			}
@@ -1077,7 +1113,9 @@ int proc_video_pal_v_end_write(struct file *file, const char __user *buf,
 
 			if ((ProcDeviceContext != NULL) && (createNew == 1))
 			{
+#ifdef VERY_VERBOSE
 				printk("create new display\n");
+#endif
 				DisplayCreate (BACKEND_VIDEO_ID, ProcDeviceContext->Id);
 
 				VideoIoctlPlay(ProcDeviceContext);
@@ -1089,8 +1127,11 @@ int proc_video_pal_v_end_write(struct file *file, const char __user *buf,
 			    	{
 			    		printk("failed to set output window %d, %d, %d\n",  screen_info.xres,  screen_info.yres, err);
 			    	} else
+#ifdef VERY_VERBOSE
 			    		printk("set output window to %d, %d ok\n",  screen_info.xres,  screen_info.yres);
-
+#else
+					;
+#endif
 			}
 		} else
 		{
@@ -1114,9 +1155,9 @@ int proc_video_pal_h_start_read (char *page, char **start, off_t off, int count,
 	int                      len = 0;
 	void                     *fb = NULL;
 	struct fb_info           *info;
-
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
    	fb = stmfb_get_fbinfo_ptr(); /* cannot return a NULL pointer */
 
 	/*
@@ -1136,9 +1177,9 @@ int proc_video_pal_h_end_read (char *page, char **start, off_t off, int count,
 	int                      len = 0;
 	void                     *fb = NULL;
 	struct fb_info           *info;
-
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
    	fb = stmfb_get_fbinfo_ptr(); /* cannot return a NULL pointer */
 
 	/*
@@ -1158,9 +1199,9 @@ int proc_video_pal_v_start_read (char *page, char **start, off_t off, int count,
 	int                      len = 0;
 	void                     *fb = NULL;
 	struct fb_info           *info;
-
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
    	fb = stmfb_get_fbinfo_ptr(); /* cannot return a NULL pointer */
 
 	/*
@@ -1180,9 +1221,9 @@ int proc_video_pal_v_end_read (char *page, char **start, off_t off, int count,
 	int                      len = 0;
 	void                     *fb = NULL;
 	struct fb_info           *info;
-
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
    	fb = stmfb_get_fbinfo_ptr(); /* cannot return a NULL pointer */
 
 	/*
@@ -1202,9 +1243,9 @@ int proc_video_videomode_choices_write(struct file *file, const char __user *buf
 	char 		*page;
 	ssize_t 	ret = -ENOMEM;
 	/* int		result; */
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
     	mutex_lock (&(ProcDeviceContext->DvbContext->Lock));
 
 	page = (char *)__get_free_page(GFP_KERNEL);
@@ -1224,7 +1265,9 @@ int proc_video_videomode_choices_read (char *page, char **start, off_t off, int
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s %d\n", __FUNCTION__, count);
+#endif
 #if defined(UFS912) || defined(SPARK) || defined (SPARK7162) || defined(ATEVIO7500) || defined(HS7810A) || defined(HS7110) || defined(WHITEBOX)
 	len = sprintf(page, "pal 1080i50 720p50 576p50 576i50 1080i60 720p60 1080p24 1080p25 1080p30 1080p50 1080p59 1080p60 PC\n");
 #else
@@ -1241,9 +1284,9 @@ int proc_video_videomode_preferred_write(struct file *file, const char __user *b
 	char		*myString;
 	ssize_t 	ret = -ENOMEM;
 	/* int		result; */
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
     	mutex_lock (&(ProcDeviceContext->DvbContext->Lock));
 
 	page = (char *)__get_free_page(GFP_KERNEL);
@@ -1256,8 +1299,9 @@ int proc_video_videomode_preferred_write(struct file *file, const char __user *b
 		myString = (char *) kmalloc(count + 1, GFP_KERNEL);
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
+#endif
 		kfree(myString);
 	}
 
@@ -1272,8 +1316,9 @@ int proc_video_videomode_preferred_read (char *page, char **start, off_t off, in
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	len = sprintf(page, "HDMI\n");
 
         return len;
@@ -1286,9 +1331,9 @@ int proc_video_alpha_write(struct file *file, const char __user *buf,
 	char		*myString;
 	ssize_t 	ret = -ENOMEM;
 	/* int		result; */
-
+#ifdef VERY_VERBOSE
 	printk("%s %ld - ", __FUNCTION__, count);
-
+#endif
 	page = (char *)__get_free_page(GFP_KERNEL);
 	if (page)
 	{
@@ -1305,9 +1350,9 @@ int proc_video_alpha_write(struct file *file, const char __user *buf,
 		myString = (char *) kmalloc(count + 1, GFP_KERNEL);
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
-
+#endif
 		sscanf(myString, "%d", &alpha);
 
 		varEx.layerid  = 0;
@@ -1333,8 +1378,9 @@ int proc_video_alpha_read (char *page, char **start, off_t off, int count,
 			  int *eof, void *data_unused)
 {
 	int len = 0;
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	struct stmfb_info *info = stmfb_get_fbinfo_ptr();
 	struct stmfbio_var_screeninfo_ex varEx;
 	stmfb_get_var_ex(&varEx, info);
diff --git a/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_vmpeg.c b/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_vmpeg.c
index fe28a0e..4480106 100644
--- a/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_vmpeg.c
+++ b/player2_191/linux/drivers/media/dvb/stm/dvb/e2_proc/e2_proc_vmpeg.c
@@ -29,9 +29,9 @@ int proc_vmpeg_0_dst_left_write(struct file *file, const char __user *buf,
 	struct fb_var_screeninfo screen_info;
 	char* myString = kmalloc(count + 1, GFP_KERNEL);
 	struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
-
+#ifdef VERY_VERBOSE
 	printk("%s %d - ", __FUNCTION__, (unsigned int)count);
-
+#endif
         fb =  stmfb_get_fbinfo_ptr();
 			
 	info = (struct fb_info*) fb;
@@ -59,7 +59,9 @@ int proc_vmpeg_0_dst_left_write(struct file *file, const char __user *buf,
 		strncpy(myString, page, count);
 		myString[count] = '\0';
 
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
+#endif
 		sscanf(myString, "%x", &value);
 
 		if(pContext != NULL)
@@ -69,17 +71,20 @@ int proc_vmpeg_0_dst_left_write(struct file *file, const char __user *buf,
 			err = StreamGetOutputWindow(pContext->VideoStream, &l,&t,&w,&h);
 			if (err != 0)
 				printk("failed to get output window %d\n", err);
+#ifdef VERY_VERBOSE
 			else	
 				printk("get output window to %d %d %d, %d ok\n",  l,  t, w, h);
-
+#endif
 			l = x*value/720;
 
 			err = DvbStreamSetOutputWindow(pContext->VideoStream, l, t, w, h);
 				
 			if (err != 0)
 				printk("failed to set output window %d\n", err);
+#ifdef VERY_VERBOSE
 			else	
 				printk("set output window ok %d %d %d %d\n", l, t, w, h);
+#endif
 			mutex_unlock (&(pContext->DvbContext->Lock));
 		}
 
@@ -104,9 +109,9 @@ int proc_vmpeg_0_dst_left_read (char *page, char **start, off_t off, int count,
         struct fb_info *info;
 	struct fb_var_screeninfo screen_info;
 	struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
-	
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-	
+#endif
 	fb =  stmfb_get_fbinfo_ptr();
 			
 	info = (struct fb_info*) fb;
@@ -130,9 +135,10 @@ int proc_vmpeg_0_dst_left_read (char *page, char **start, off_t off, int count,
 		err = StreamGetOutputWindow(pContext->VideoStream, &l,&t,&w,&h);
 		if (err != 0)
 			printk("failed to get output window %d\n", err);
+#ifdef VERY_VERBOSE
 		else	
 			printk("get output window to %d %d %d, %d ok\n",  l,  t, w, h);
-
+#endif
 		mutex_unlock (&(pContext->DvbContext->Lock));
 	}
 	len = sprintf(page, "%x\n", 720*l/x);
@@ -151,9 +157,9 @@ int proc_vmpeg_0_dst_top_write(struct file *file, const char __user *buf,
 	struct fb_var_screeninfo screen_info;
 	char* myString = kmalloc(count + 1, GFP_KERNEL);
 	struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
-
+#ifdef VERY_VERBOSE
 	printk("%s %d - ", __FUNCTION__, (unsigned int)count);
-
+#endif
 	fb =  stmfb_get_fbinfo_ptr();
 			
 	info = (struct fb_info*) fb;
@@ -179,8 +185,9 @@ int proc_vmpeg_0_dst_top_write(struct file *file, const char __user *buf,
 
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
+#endif
 		sscanf(myString, "%x", &value);
 
 		if (pContext != NULL)
@@ -191,17 +198,20 @@ int proc_vmpeg_0_dst_top_write(struct file *file, const char __user *buf,
 			err = StreamGetOutputWindow(pContext->VideoStream, &l,&t,&w,&h);
 			if (err != 0)
 				printk("failed to get output window %d\n", err);
+#ifdef VERY_VERBOSE
 			else	
 				printk("get output window to %d %d %d, %d ok\n",  l,  t, w, h);
-
+#endif
 			t = y*value/576;
 
 		    	err = DvbStreamSetOutputWindow(pContext->VideoStream, l, t, w, h);
 				
 			if (err != 0)
 				printk("failed to set output window %d\n", err);
+#ifdef VERY_VERBOSE
 			else	
 				printk("set output window ok %d %d %d %d\n", l, t, w, h);
+#endif
 			mutex_unlock (&(pContext->DvbContext->Lock));
 		}
 		
@@ -226,9 +236,9 @@ int proc_vmpeg_0_dst_top_read (char *page, char **start, off_t off, int count,
         struct fb_info  *info;
 	struct fb_var_screeninfo screen_info;
 	struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
-
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	fb =  stmfb_get_fbinfo_ptr();
 			
 	info = (struct fb_info*) fb;
@@ -252,9 +262,10 @@ int proc_vmpeg_0_dst_top_read (char *page, char **start, off_t off, int count,
 		err = StreamGetOutputWindow(pContext->VideoStream, &l,&t,&w,&h);
 		if (err != 0)
 			printk("failed to get output window %d\n", err);
+#ifdef VERY_VERBOSE
 		else	
 			printk("get output window to %d %d %d, %d ok\n",  l,  t, w, h);
-
+#endif
 		mutex_unlock (&(pContext->DvbContext->Lock));
 	}
 	len = sprintf(page, "%x\n", 576*t/y);
@@ -275,9 +286,9 @@ int proc_vmpeg_0_dst_width_write(struct file *file, const char __user *buf,
 	struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
 
 	char* myString = kmalloc(count + 1, GFP_KERNEL);
-
+#ifdef VERY_VERBOSE
 	printk("%s %d - ", __FUNCTION__, (unsigned int)count);
-
+#endif
 	fb =  stmfb_get_fbinfo_ptr();
 			
 	info = (struct fb_info*) fb;
@@ -303,8 +314,9 @@ int proc_vmpeg_0_dst_width_write(struct file *file, const char __user *buf,
 
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
+#endif
 		sscanf(myString, "%x", &value);
 
 		if (pContext != NULL)
@@ -315,17 +327,20 @@ int proc_vmpeg_0_dst_width_write(struct file *file, const char __user *buf,
 			err = StreamGetOutputWindow(pContext->VideoStream, &l,&t,&w,&h);
 			if (err != 0)
 				printk("failed to get output window %d\n", err);
+#ifdef VERY_VERBOSE
 			else	
 				printk("get output window to %d %d %d, %d ok\n",  l,  t, w, h);
-
+#endif
 			w = x*value/720;
 
 		    	err = DvbStreamSetOutputWindow(pContext->VideoStream, l, t, w, h);
 				
 			if (err != 0)
 				printk("failed to set output window %d\n", err);
+#ifdef VERY_VERBOSE
 			else	
 				printk("set output window ok %d %d %d %d\n", l, t, w, h);
+#endif
 			mutex_unlock (&(pContext->DvbContext->Lock));
 		}
 		
@@ -350,9 +365,9 @@ int proc_vmpeg_0_dst_width_read (char *page, char **start, off_t off, int count,
         struct fb_info  *info;
 	struct fb_var_screeninfo screen_info;
 	struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
-
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	fb =  stmfb_get_fbinfo_ptr();
 			
 	info = (struct fb_info*) fb;
@@ -375,9 +390,10 @@ int proc_vmpeg_0_dst_width_read (char *page, char **start, off_t off, int count,
 		err = StreamGetOutputWindow(pContext->VideoStream, &l,&t,&w,&h);
 		if (err != 0)
 			printk("failed to get output window %d\n", err);
+#ifdef VERY_VERBOSE
 		else	
 			printk("get output window to %d %d %d, %d ok\n",  l,  t, w, h);
-
+#endif
 		mutex_unlock (&(pContext->DvbContext->Lock));
 	}
 
@@ -398,9 +414,9 @@ int proc_vmpeg_0_dst_height_write(struct file *file, const char __user *buf,
 	struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
 
 	char* myString = kmalloc(count + 1, GFP_KERNEL);
-
+#ifdef VERY_VERBOSE
 	printk("%s %d - ", __FUNCTION__, (unsigned int)count);
-
+#endif
 	fb =  stmfb_get_fbinfo_ptr();
 			
 	info = (struct fb_info*) fb;
@@ -426,8 +442,9 @@ int proc_vmpeg_0_dst_height_write(struct file *file, const char __user *buf,
 
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
+#endif
 		sscanf(myString, "%x", &value);
 
 		if (pContext != NULL)
@@ -438,17 +455,20 @@ int proc_vmpeg_0_dst_height_write(struct file *file, const char __user *buf,
 			err = StreamGetOutputWindow(pContext->VideoStream, &l,&t,&w,&h);
 			if (err != 0)
 				printk("failed to get output window %d\n", err);
+#ifdef VERY_VERBOSE
 			else	
 				printk("get output window to %d %d %d, %d ok\n",  l,  t, w, h);
-
+#endif
 			h = y*value/576;
 
 		    	err = DvbStreamSetOutputWindow(pContext->VideoStream, l, t, w, h);
 				
 			if (err != 0)
 				printk("failed to set output window %d\n", err);
+#ifdef VERY_VERBOSE
 			else	
 				printk("set output window ok %d %d %d %d\n", l, t, w, h);
+#endif
 			mutex_unlock (&(pContext->DvbContext->Lock));
 		}
 		
@@ -473,9 +493,9 @@ int proc_vmpeg_0_dst_height_read (char *page, char **start, off_t off, int count
         struct fb_info  *info;
 	struct fb_var_screeninfo screen_info;
 	struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
-
+#ifdef VERY_VERBOSE
 	printk("%s\n", __FUNCTION__);
-
+#endif
 	fb =  stmfb_get_fbinfo_ptr();
 			
 	info = (struct fb_info*) fb;
@@ -499,9 +519,10 @@ int proc_vmpeg_0_dst_height_read (char *page, char **start, off_t off, int count
 		err = StreamGetOutputWindow(pContext->VideoStream, &l,&t,&w,&h);
 		if (err != 0)
 			printk("failed to get output window %d\n", err);
+#ifdef VERY_VERBOSE
 		else	
 			printk("get output window to %d %d %d, %d ok\n",  l,  t, w, h);
-
+#endif
 		mutex_unlock (&(pContext->DvbContext->Lock));
 	}
 	len = sprintf(page, "%x\n", 576*h/y);
@@ -514,9 +535,9 @@ int proc_vmpeg_0_yres_read (char *page, char **start, off_t off, int count,
 {
     int len = 0;
     struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
-    
+#ifdef VERY_VERBOSE
     printk("%s\n", __FUNCTION__);
-
+#endif
     if(pContext != NULL)
     {
 	mutex_lock (&(pContext->DvbContext->Lock));
@@ -534,9 +555,9 @@ int proc_vmpeg_0_xres_read (char *page, char **start, off_t off, int count,
 {
     int len = 0;
     struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
-    
+#ifdef VERY_VERBOSE
     printk("%s\n", __FUNCTION__);
-
+#endif
     if(pContext != NULL)
     {
 	mutex_lock (&(pContext->DvbContext->Lock));
@@ -554,9 +575,9 @@ int proc_vmpeg_0_framerate_read (char *page, char **start, off_t off, int count,
 {
     int len = 0;
     struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
-    
+#ifdef VERY_VERBOSE
     printk("%s\n", __FUNCTION__);
-
+#endif
     if(pContext != NULL)
     {
 	mutex_lock (&(pContext->DvbContext->Lock));
@@ -574,9 +595,9 @@ int proc_vmpeg_0_aspect_read (char *page, char **start, off_t off, int count,
 {
     int len = 0;
     struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
-    
+#ifdef VERY_VERBOSE
     printk("%s\n", __FUNCTION__);
-
+#endif
     if(pContext != NULL)
     {
 	mutex_lock (&(pContext->DvbContext->Lock));
@@ -600,9 +621,9 @@ int proc_vmpeg_0_dst_all_write(struct file *file, const char __user *buf,
 	struct fb_var_screeninfo screen_info;
 	char* myString = kmalloc(count + 1, GFP_KERNEL);
 	struct DeviceContext_s *pContext = (struct DeviceContext_s*)data;
-
+#ifdef VERY_VERBOSE
 	printk("%s %d - ", __FUNCTION__, (unsigned int)count);
-
+#endif
 	fb =  stmfb_get_fbinfo_ptr();
 			
 	info = (struct fb_info*) fb;
@@ -630,12 +651,13 @@ int proc_vmpeg_0_dst_all_write(struct file *file, const char __user *buf,
 
 		strncpy(myString, page, count);
 		myString[count] = '\0';
-
+#ifdef VERY_VERBOSE
 		printk("%s\n", myString);
+#endif
 		sscanf(myString, "%x %x %x %x", &l ,&t, &w, &h);
-
+#ifdef VERY_VERBOSE
                 printk("%x, %x, %x, %x\n", l, t, w, h);
-
+#endif
 		if (pContext != NULL)
 		{
 			mutex_lock (&(pContext->DvbContext->Lock));
@@ -644,15 +666,17 @@ int proc_vmpeg_0_dst_all_write(struct file *file, const char __user *buf,
 			w = x*w/720;
 			l = x*l/720;
 			t = y*t/576;
-
+#ifdef VERY_VERBOSE
                         printk("%x, %x, %x, %x\n", l, t, w, h);
-
+#endif
 		    	err = DvbStreamSetOutputWindow(pContext->VideoStream, l, t, w, h);
 				
 			if (err != 0)
 				printk("failed to set output window %d\n", err);
+#ifdef VERY_VERBOSE
 			else	
 				printk("set output window ok %d %d %d %d\n", l, t, w, h);
+#endif
 			mutex_unlock (&(pContext->DvbContext->Lock));
 		}
 		
diff --git a/player2_191/linux/drivers/media/dvb/stm/dvb/st-pti.c b/player2_191/linux/drivers/media/dvb/stm/dvb/st-pti.c
index 5f0fe4e..9ac8f2e 100644
--- a/player2_191/linux/drivers/media/dvb/stm/dvb/st-pti.c
+++ b/player2_191/linux/drivers/media/dvb/stm/dvb/st-pti.c
@@ -110,11 +110,11 @@ int stpti_start_feed ( struct dvb_demux_feed *dvbdmxfeed,
          ((pSession->source == DMX_SOURCE_DVR0) && swts)))
     return -1;
 
-
+#ifdef VERY_VERBOSE
   printk("start dmx %p, sh %d, pid %d, t %d, pt %d\n", demux,
                pSession->session, dvbdmxfeed->pid, dvbdmxfeed->type,
                dvbdmxfeed->pes_type );
-
+#endif
   switch ( dvbdmxfeed->type )
   {
   case DMX_TYPE_TS:
@@ -153,10 +153,12 @@ int stpti_start_feed ( struct dvb_demux_feed *dvbdmxfeed,
       return -EINVAL;
     }
   }
+#ifdef VERY_VERBOSE
   else
   {
     dprintk ( "type = %d \n",dvbdmxfeed->type );
   }
+#endif
 
   if (dvbdmxfeed->type == DMX_TYPE_SEC)
   	my_pes_type = 99;
@@ -186,13 +188,16 @@ int stpti_start_feed ( struct dvb_demux_feed *dvbdmxfeed,
 	       int err;
 	       if ((err = pti_hal_descrambler_link(pSession->session, pSession->descramblers[pSession->descramblerindex[vLoop]], pSession->slots[vLoop])) != 0)
 	         printk("Error linking slot %d to descrambler %d, err = %d\n", pSession->slots[vLoop], pSession->descramblers[pSession->descramblerindex[vLoop]], err);
+#ifdef VERY_VERBOSE
 	       else
              printk("linking slot %d to descrambler %d, session = %d type = %d\n", pSession->slots[vLoop], pSession->descramblers[pSession->descramblerindex[vLoop]], pSession->session, dvbdmxfeed->pes_type);
+#endif
 	     }
       }
-
+#ifdef VERY_VERBOSE
       printk ( "pid %d already collecting. references %d \n",
 	       dvbdmxfeed->pid , pSession->references[vLoop]);
+#endif
       return 0;
     }
   }
@@ -210,9 +215,9 @@ int stpti_start_feed ( struct dvb_demux_feed *dvbdmxfeed,
 							    pes_type, demux , NULL, NULL);
 
   pSession->descramblerindex[pSession->num_pids]= pSession->descramblerForPid[dvbdmxfeed->pid];
-
+#ifdef VERY_VERBOSE
   printk ( "SlotHandle = %d\n", pSession->slots[pSession->num_pids] );
-
+#endif
   if(pti_hal_slot_link_buffer ( pSession->session,
                              pSession->slots[pSession->num_pids],
 			     bufType) != 0)
@@ -238,8 +243,10 @@ int stpti_start_feed ( struct dvb_demux_feed *dvbdmxfeed,
 	      printk("Error linking slot %d to descrambler %d, err = %d\n",
                 pSession->slots[pSession->num_pids],
                 pSession->descramblers[pSession->descramblerindex[pSession->num_pids]], err);
+#ifdef VERY_VERBOSE
      else
           printk("linking slot %d to descrambler %d, session = %d type=%d\n", pSession->slots[pSession->num_pids], pSession->descramblers[pSession->descramblerindex[pSession->num_pids]], pSession->session, dvbdmxfeed->pes_type);
+#endif
     }
   }
 
@@ -254,7 +261,7 @@ int stpti_start_feed ( struct dvb_demux_feed *dvbdmxfeed,
   dprintk ( "%s: pid = %d, num_pids = %d \n", __FUNCTION__, dvbdmxfeed->pid,
 	   pSession->num_pids );
 
-#if 0
+#ifdef VERY_VERBOSE
   printk ( "#  pid t pt ref\n");
   for ( vLoop = 0; vLoop < ( pSession->num_pids ); vLoop++ )
   {
@@ -288,8 +295,9 @@ int stpti_stop_feed ( struct dvb_demux_feed *dvbdmxfeed,
          (pSession->source <= DMX_SOURCE_FRONT2)) ||
          ((pSession->source == DMX_SOURCE_DVR0) && swts)))
     return -1;
-
+#ifdef VERY_VERBOSE
   printk ( "stop sh %d, pid %d, pt %d\n", pSession->session, dvbdmxfeed->pid, dvbdmxfeed->pes_type);
+#endif
   //printk ( "%s(): demux = %p, context = %p, sesison = %p, pid = %d, type = %d, pes_type = %d>", __FUNCTION__, dvbdmxfeed->demux, pContext, pSession, dvbdmxfeed->pid, dvbdmxfeed->type, dvbdmxfeed->pes_type );
 
   if (dvbdmxfeed->type == DMX_TYPE_SEC)
@@ -305,9 +313,9 @@ int stpti_stop_feed ( struct dvb_demux_feed *dvbdmxfeed,
     if (( pSession->pidtable[vLoop] == dvbdmxfeed->pid ) )
     {
       pSession->references[vLoop]--;
-
+#ifdef VERY_VERBOSE
       printk("Reference = %d\n", pSession->references[vLoop]);
-
+#endif
       haveFound = 1;
 
       if (pSession->references[vLoop] == 0)
@@ -338,7 +346,7 @@ int stpti_stop_feed ( struct dvb_demux_feed *dvbdmxfeed,
 
 	pSession->num_pids--;
 
-#if 0
+#ifdef VERY_VERBOSE
 	if(dvbdmxfeed->pes_type == DMX_TS_PES_VIDEO)
 	{
           /* reset the DMA threshold to 1 to allow low rate TS
@@ -539,9 +547,9 @@ int SetSource (struct dmx_demux* demux, const dmx_source_t *src)
            __func__, pContext, pContext->pPtiSession, src);
     return -EINVAL;
   }
-
+#ifdef VERY_VERBOSE
   printk("SetSource(%p, %d)\n", pDvbDemux, *src);
-
+#endif
   pContext->pPtiSession->source = *src;
 
   if (((*src >= DMX_SOURCE_FRONT0) && (*src <= DMX_SOURCE_FRONT3)) || (*src == DMX_SOURCE_DVR0))
diff --git a/player2_191/linux/drivers/sound/kreplay/kreplay.c b/player2_191/linux/drivers/sound/kreplay/kreplay.c
index fcdc7d8..aadd73b 100644
--- a/player2_191/linux/drivers/sound/kreplay/kreplay.c
+++ b/player2_191/linux/drivers/sound/kreplay/kreplay.c
@@ -234,8 +234,9 @@ static int __init kreplay_module_init(void)
 		printk("Failed to spawn kthread\n");
 		return PTR_ERR(kreplay_kthread);
 	}
-
+#ifdef VERY_VERBOSE
 	printk(KERN_DEBUG "kreplay: Built %s %s\n", __DATE__, __TIME__);
+#endif
 	return 0;
 }
 
diff --git a/player2_191/linux/drivers/sound/ksound/ksound-core.c b/player2_191/linux/drivers/sound/ksound/ksound-core.c
index 7f5d212..b4e2a57 100644
--- a/player2_191/linux/drivers/sound/ksound/ksound-core.c
+++ b/player2_191/linux/drivers/sound/ksound/ksound-core.c
@@ -1229,9 +1229,9 @@ static int _ksnd_pcm_write_transfer(snd_pcm_substream_t *substream,
 	char *buf = (char *) data + samples_to_bytes(runtime, off*srcchannels);
 	char *uncachedbuf = ioremap_nocache(runtime->dma_addr, runtime->dma_bytes);
 	char *hwbuf = uncachedbuf + frames_to_bytes(runtime, hwoff);
-
+#ifdef VERY_VERBOSE
 	printk("offset %d base %p samples %p\n", hwoff, uncachedbuf, hwbuf);
-
+#endif
 	if (srcchannels == runtime->channels) {
 		memcpy(hwbuf, buf, frames_to_bytes(runtime, frames));
 	} else {
@@ -2038,7 +2038,9 @@ int ksnd_hctl_elem_write(snd_kcontrol_t *elem, snd_ctl_elem_value_t *control)
 
 static int __init ksnd_module_init(void)
 {
+#ifdef VERY_VERBOSE
 	printk(KERN_DEBUG "ksound: Built %s %s\n", __DATE__, __TIME__);
+#endif
 	return 0;
 }
 
diff --git a/player2_191/linux/drivers/sound/ksound/ktone.c b/player2_191/linux/drivers/sound/ksound/ktone.c
index ccd9378..26923d9 100644
--- a/player2_191/linux/drivers/sound/ksound/ktone.c
+++ b/player2_191/linux/drivers/sound/ksound/ktone.c
@@ -225,8 +225,9 @@ int __init ktone_module_init(void)
 		printk("Failed to spawn kthread\n");
 		return PTR_ERR(ktone_kthread);
 	}
-
+#ifdef VERY_VERBOSE
 	printk(KERN_DEBUG "ktone: Built %s %s\n", __DATE__, __TIME__);
+#endif
 	return 0;
 }
 
-- 
1.7.7

