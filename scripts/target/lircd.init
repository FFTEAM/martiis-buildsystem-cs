#!/bin/sh
PID=/var/run/lirc/lircd.pid

case $1 in
	start)
		(
		touch /tmp/.init_lircd_done
#		read dummy dummy KVER dummy < /proc/version
#		grep -q uinput /lib/modules/${KVER}/modules.dep || depmod -a
#		modprobe uinput
		# if /var/run does not exist, we are screwed anyway...
		mkdir /var/run/lirc 2>/dev/null
		LIRCD_CONF=`sed 's#.*STB_ID=\(..:..:..\).*#/etc/lircd.conf.\1#' < /proc/cmdline | tr ':' '_'`
		[ -f "$LIRCD_CONF" ] || LIRCD_CONF=/etc/lircd.conf
		# wait for uinput device, takes a short time to show up...
		for i in `seq 40`; do
			test -e /dev/uinput && break
			usleep 100000	# 100ms
		done
		/sbin/lircd -u $LIRCD_CONF
		/bin/irexec -d /etc/lircrc
		rm /tmp/.init_lircd_done
		) >/dev/null 2>&1 &
		;;
	stop)
		kill -TERM `cat $PID`
		kill -TERM $(pidof irexec)
		;;
	status)
		if test -e $PID && kill -0 `cat $PID` 2>/dev/null; then
			echo "lircd is running"
			exit 0
		else
			echo "lircd is not running"
			exit 1
		fi
		;;
	*)
		echo   "usage:	$0 <start|stop|status>"
		exit 1
		;;
esac
