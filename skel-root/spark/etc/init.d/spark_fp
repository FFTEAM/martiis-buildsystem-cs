#!/bin/sh

im()
{
	modname=$1
	modsane=${1//-/_}
	params=$(eval echo \$OPT_${modsane})
	shift
	file=/lib/modules/${KVER}/${modname}.ko
	# own built modules are in /lib/modules/$KVER/kernel/... subdirectories
	if test -e $file; then
		echo "overriding from $file..."
		/sbin/insmod $file ${params:-$@}
	else
		/sbin/modprobe $modname $@
	fi
}

case $1 in
start)
	read dummy dummy KVER dummy < /proc/version
	# set all "option foo ..." as OPT_foo="..." variables
	eval $(sed -n "/^options\s/{
		s/^options\s\(\S\+\)\s\(.*\)\$/OPT_\1=\"\2\"/;
		s/^\(\S\+\)-/\1_/g;
		s/^\(\S\+\)-/\1_/g;
		s/^\(\S\+\)-/\1_/g;
		p }" /etc/modprobe.conf)
	im aotom
	WAKEUP=$(spark_fp -g)
	REASON=$?
	echo "wakeup reason: $REASON ($WAKEUP)"
	test $REASON = 3 && touch /tmp/.timer_wakeup
	wait_for_device /dev/rtc0 2
	hwclock --hctosys --localtime
	spark_fp -p 20 -l 2
	;;
stop)
	hwclock --systohc --localtime
	read RTC_NOW < /sys/class/rtc/rtc0/since_epoch
	NOW=$(date +%s)
	OFFSET=$((RTC_NOW - NOW)) # offset between UTC and localtime
	echo 0 > /sys/class/rtc/rtc0/wakealarm
	if test -e /tmp/.timer; then
		read WAKEUP < /tmp/.timer
		WAKEUP=$((WAKEUP + OFFSET))
		echo "setting wakeup time to $WAKEUP (NOW: $RTC_NOW, OFFSET: $OFFSET)"
		if test $WAKEUP -lt $((RTC_NOW + 30)); then
			WAKEUP=$((RTC_NOW + 30))
			echo "correcting WAKEUP to $WAKEUP"
		fi
		echo $WAKEUP > /sys/class/rtc/rtc0/wakealarm
		FP_OPTS="-l 1 -L 1" # enable green LED only
	else
		FP_OPTS="-L 0 -L 1" # disable LEDs
	fi
	[ -f /tmp/.fp_leds ] && read FP_OPTS < /tmp/.fp_leds
	spark_fp $FP_OPTS
	# dmesg | tail -2
	;;
esac
